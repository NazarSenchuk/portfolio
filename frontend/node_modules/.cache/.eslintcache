[{"E:\\IT\\notes\\mynotes\\frontend\\src\\index.js":"1","E:\\IT\\notes\\mynotes\\frontend\\src\\App.js":"2","E:\\IT\\notes\\mynotes\\frontend\\src\\components\\Header.js":"3","E:\\IT\\notes\\mynotes\\frontend\\src\\pages\\NotesListPages.js":"4","E:\\IT\\notes\\mynotes\\frontend\\src\\pages\\NotePage.js":"5","E:\\IT\\notes\\mynotes\\frontend\\src\\components\\ListItem.js":"6","E:\\IT\\notes\\mynotes\\frontend\\src\\components\\AddButton.js":"7"},{"size":235,"mtime":1677233076034,"results":"8","hashOfConfig":"9"},{"size":679,"mtime":1677525609763,"results":"10","hashOfConfig":"9"},{"size":200,"mtime":1677412584007,"results":"11","hashOfConfig":"9"},{"size":1180,"mtime":1677436890819,"results":"12","hashOfConfig":"9"},{"size":2259,"mtime":1677522456286,"results":"13","hashOfConfig":"9"},{"size":607,"mtime":1677524435053,"results":"14","hashOfConfig":"9"},{"size":365,"mtime":1677439529211,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"noi47l",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"E:\\IT\\notes\\mynotes\\frontend\\src\\index.js",[],[],"E:\\IT\\notes\\mynotes\\frontend\\src\\App.js",["41","42"],[],"E:\\IT\\notes\\mynotes\\frontend\\src\\components\\Header.js",[],[],"E:\\IT\\notes\\mynotes\\frontend\\src\\pages\\NotesListPages.js",["43","44","45","46","47"],[],"import React, {useState,useEffect} from 'react'\r\nimport {ReactComponent as Add} from '../assets/add.svg'\r\nimport ListItem from '../components/ListItem'\r\nimport AddButton from '../components/AddButton'\r\nimport {\r\n    useNavigate,\r\n  BrowserRouter,\r\n  useParams,\r\n  Link\r\n} from \"react-router-dom\";\r\nconst NotesListPage = () => {\r\n    let [notes,setNotes] = useState([])\r\n    useEffect(() => {\r\n        getNotes()\r\n    }, [])\r\n    let getNotes = async () => {\r\n\r\n        let response = await fetch('api/notes/')\r\n        let data = await response.json()\r\n        console.log('data:',data)\r\n        setNotes(data)\r\n    }\r\n    console.log(notes)\r\n    return (\r\n        <div className = \"notes\">\r\n        <div className = \"notes-header\">\r\n\r\n            <div>\r\n                <h2 className= \"notes-title\"> &#9782;Notes </h2>\r\n                <p className = \"notes-count\" > {notes.length} </p>\r\n            </div>\r\n\r\n        </div>\r\n        <div className = \"notes-list\">\r\n        <h2> NOTELIST </h2>\r\n        {notes.map((note,index)=>(\r\n\r\n        <ListItem key = {index} note= {note}/>))}\r\n\r\n        </div>\r\n        <AddButton />\r\n        </div>\r\n    )\r\n}\r\nexport default NotesListPage","E:\\IT\\notes\\mynotes\\frontend\\src\\pages\\NotePage.js",["48","49","50","51"],[],"import React, {useState ,useEffect} from 'react'\r\nimport {ReactComponent as Arrowleft} from '../assets/arrow-left.svg'\r\nimport {\r\n    useNavigate,\r\n  BrowserRouter,\r\n  useParams,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport ListItem from '../components/ListItem'\r\nconst NotePage = ({match,}) => {\r\n     let history = useNavigate();\r\n     let {id}  = useParams();\r\n     let [note,setNote] =  useState()\r\n     useEffect(()=>{\r\n        getNote()\r\n     },[])\r\n      let getNote = async () => {\r\n      if( id !== \"new\"){\r\n      let response = await fetch(`/api/notes/get/${id}/`)\r\n        let data = await response.json()\r\n        console.log('data:',data)\r\n        setNote(data)}\r\n      }\r\n    let updateNote = async () => {\r\n        fetch(`/api/notes/${id}/update/`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n        'Content-Type':\"application/json\"},\r\n        body:JSON.stringify(note)\r\n\r\n\r\n        })\r\n    }\r\n     let createNote = async () => {\r\n        fetch(`/api/notes/create/`, {\r\n        method: \"POST\",\r\n        headers: {\r\n        'Content-Type':\"application/json\"},\r\n        body:JSON.stringify(note)\r\n\r\n\r\n        })\r\n    }\r\n\r\n    let handleSubmit =()=> {\r\n    if(id !=='new'&& note.body== '') {\r\n        deleteNote()\r\n\r\n        console.log('delete')\r\n    }else if(id !== 'new'){\r\n        updateNote()\r\n        console.log('update')\r\n   }else if(id ==='new'&& note !== null){\r\n    createNote()\r\n    console.log('create')\r\n    }\r\n    history('/')\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    let deleteNote  = async()=>{\r\n        fetch(`/api/notes/${id}/delete/`, {\r\n         method:'DELETE',\r\n         'headers':{\r\n         'Content-Type':'application/json'\r\n\r\n         }\r\n\r\n        })\r\n    }\r\n     return(\r\n     <div className = \"note\">\r\n     <div className = \"note-header\">\r\n     <h3>\r\n        <Link to = \"/\">\r\n            <Arrowleft onClick = {handleSubmit}/>\r\n\r\n        </Link>\r\n     </h3>\r\n     <Link to = \"/\">\r\n\r\n     {id !== 'new' ? (\r\n        <button onClick={deleteNote}>Delete</button>\r\n     ):(\r\n        <button onClick = {handleSubmit}> Done</button>\r\n     )}\r\n     </Link>\r\n     </div>\r\n\r\n     <textarea onChange={(e) => { setNote(note => ({ ...note, 'body': e.target.value })) }} value={note?.body}></textarea>\r\n     </div>\r\n)}\r\nexport default NotePage","E:\\IT\\notes\\mynotes\\frontend\\src\\components\\ListItem.js",["52"],[],"import React from 'react'\r\nimport {\r\n  BrowserRouter,\r\n\r\n  Link,\r\n} from \"react-router-dom\";\r\nlet getTime=(note)=>{\r\n    let time = note.created\r\n\r\n    return time.slice(0,10)\r\n}\r\nlet getTitle=(note)=>{\r\n    let title = note.body.split('\\n')[0]\r\n    if (title.length > 45){\r\n\r\n        return title.slice(0,45)\r\n    }\r\n    return title\r\n}\r\nconst ListItem = ({note} ) =>{\r\n\r\n\r\n    return (\r\n\r\n    <Link to={`/note/${note.id}`}>\r\n\r\n    <div className = \"notes-list-item\">\r\n    <h3>{getTitle(note)}</h3>\r\n    <p>{getTime(note)}</p>\r\n    </div>\r\n\r\n    </Link>\r\n\r\n\r\n\r\n\r\n    )\r\n\r\n\r\n\r\n\r\n\r\n}\r\nexport default ListItem","E:\\IT\\notes\\mynotes\\frontend\\src\\components\\AddButton.js",["53","54","55"],[],"import React from 'react'\r\nimport {ReactComponent as Add} from '../assets/add.svg'\r\nimport {\r\n    useNavigate,\r\n  BrowserRouter,\r\n  useParams,\r\n  Link\r\n} from \"react-router-dom\";\r\nconst AddButton =() => {\r\n    return (\r\n\r\n        <Link to =\"/note/new\" className=\"floating-button\">\r\n            <Add/>\r\n        </Link>\r\n\r\n\r\n\r\n    )\r\n\r\n\r\n\r\n}\r\nexport default AddButton",{"ruleId":"56","severity":1,"message":"57","line":2,"column":10,"nodeType":"58","messageId":"59","endLine":2,"endColumn":16},{"ruleId":"56","severity":1,"message":"60","line":2,"column":18,"nodeType":"58","messageId":"59","endLine":2,"endColumn":27},{"ruleId":"56","severity":1,"message":"61","line":2,"column":27,"nodeType":"58","messageId":"59","endLine":2,"endColumn":30},{"ruleId":"56","severity":1,"message":"62","line":6,"column":5,"nodeType":"58","messageId":"59","endLine":6,"endColumn":16},{"ruleId":"56","severity":1,"message":"63","line":7,"column":3,"nodeType":"58","messageId":"59","endLine":7,"endColumn":16},{"ruleId":"56","severity":1,"message":"60","line":8,"column":3,"nodeType":"58","messageId":"59","endLine":8,"endColumn":12},{"ruleId":"56","severity":1,"message":"64","line":9,"column":3,"nodeType":"58","messageId":"59","endLine":9,"endColumn":7},{"ruleId":"56","severity":1,"message":"63","line":5,"column":3,"nodeType":"58","messageId":"59","endLine":5,"endColumn":16},{"ruleId":"56","severity":1,"message":"65","line":9,"column":8,"nodeType":"58","messageId":"59","endLine":9,"endColumn":16},{"ruleId":"66","severity":1,"message":"67","line":16,"column":8,"nodeType":"68","endLine":16,"endColumn":10,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":46,"column":31,"nodeType":"72","messageId":"73","endLine":46,"endColumn":33},{"ruleId":"56","severity":1,"message":"63","line":3,"column":3,"nodeType":"58","messageId":"59","endLine":3,"endColumn":16},{"ruleId":"56","severity":1,"message":"62","line":4,"column":5,"nodeType":"58","messageId":"59","endLine":4,"endColumn":16},{"ruleId":"56","severity":1,"message":"63","line":5,"column":3,"nodeType":"58","messageId":"59","endLine":5,"endColumn":16},{"ruleId":"56","severity":1,"message":"60","line":6,"column":3,"nodeType":"58","messageId":"59","endLine":6,"endColumn":12},"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'Add' is defined but never used.","'useNavigate' is defined but never used.","'BrowserRouter' is defined but never used.","'Link' is defined but never used.","'ListItem' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getNote'. Either include it or remove the dependency array.","ArrayExpression",["74"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"75","fix":"76"},"Update the dependencies array to be: [getNote]",{"range":"77","text":"78"},[450,452],"[getNote]"]